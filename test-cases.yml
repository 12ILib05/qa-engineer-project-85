- summary: |
    Проверка регистрации пользователя через почту
  requirement: |
    При валидном вводе логина, ника, пароля и подтверждения пользователь должен успешно зарегистрироваться
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F 
  test-data: |
    Nickname = kem95
    Email = kemocok952@eazenity.com 
    Password = kemocok952 
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить письмо с подтверждением регистрации аккаунта

- summary: |
    Проверка регистрации пользователя через невалидный ник
  requirement: |
    При вводе невалидного ника пользователь должен получить сообщение об ошибке
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Nickname = 95
    Email = kemocok952@eazenity.com 
    Password = kemocok952 
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Проверка регистрации пользователя через уже существующий ник
  requirement: |
    При вводе существующего ника пользователь должен получить сообщение об этом
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Nickname = 12ILib05
    Email = kemocok952@eazenity.com 
    Password = kemocok952
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение о том, что такой ник уже существует

- summary: |
    Проверка регистрации пользователя через невалидную почту
  requirement: |
    При вводе невалидной почты пользователь должен получить сообщение об ошибке
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Nickname = kem95
    Email = kemocok952 
    Password = kemocok952
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Проверка регистрации пользователя через уже существующую почту
  requirement: |
    При вводе существующей почты пользователь должен получить сообщение об этом
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Nickname = kem95
    Email = kemocok952@eazenity.com 
    Password = kemocok952
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение о том, что аккаунт с такой почтой уже зарегистрирован

- summary: |
    Проверка регистрации пользователя через невалидный пароль
  requirement: |
    При вводе невалидного пароля пользователь должен получить сообщение об ошибке
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Nickname = kem95
    Email = kemocok952@eazenity.com 
    Password = kemo
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Проверка регистрации пользователя через невалидное подтверждение пароля
  requirement: |
    При вводе невалидного подтверждения пароля пользователь должен получить сообщение об ошибке
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Nickname = kem95
    Email = kemocok952@eazenity.com 
    Password = kemocok952
    Password Confirmation = kemocok9
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Проверка авторизации пользователя через почту с существующими логином и паролем
  requirement: |
    При верном вводе логина и пароля пользователь должен войти в систему
  prerequisites: |
    Открыта страница авторизации https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Email = kemocok952@eazenity.com 
    Password = kemocok952
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
   expected-result: |
    Пользователь должен войти в систему

- summary: |
    Проверка авторизации пользователя с несуществующими логином и паролем
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница авторизации https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Email = hexlet@eazenity.com 
    Password = badpass
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Проверка восстановления пароля пользователя с существующими логином и паролем
  requirement: |
    Пользователь должен получить письмо с ссылкой для восстановления пароля и изменить пароль
  prerequisites:
    Открыта страница авторизации https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Email = kemocok952@eazenity.com 
    New password = kemocok952new
  steps:
    - Переходим по ссылке  «Forgot your password?»
    - Вводим Email
    - Нажимаем кнопку «Submit»
    - Переходим по ссылке в письме 
    - Вводим новый пароль в поле «New password»
    - Нажимаем «Save»
    - Нажимаем «Sign out»
    - Нажимаем «Sign in»
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Произошел вход на сайт с новым (восстановленным) паролем 

- summary: |
    Проверка восстановления пароля пользователя с несуществующими логином
  requirement: |
    Пользователь должен получить сообщение о несуществующем аккаунте
  prerequisites:
    Открыта страница авторизации https://codebattle.hexlet.io/session/new?locale=en&next=%2F 
  test-data: |
    Email = hexlet@eazenity.com
   steps:
    - Переходим по ссылке “Forgot your password?”
    - Вводим Email
    - Нажимаем кнопку «Submit»
   expected-result: |
    Пользователь должен получить сообщение о несуществующем аккаунте

- summary: |
    Проверка регистрации пользователя через Github
  requirement: |
    При наличии аккаунта на Github пользователь должен успешно зарегистрироваться
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    аккаунт на Github
  steps:
    - Нажимаем на ссылку «Sign in with Github»
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Вход»
  expected-result: |
    Пользователь должен зарегистрироваться в системе

- summary: |
    Проверка авторизации пользователя через Github
  requirement: |
    При верном вводе логина и пароля пользователь должен войти в систему
  prerequisites: |
    Открыта страница авторизации https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    аккаунт на Github
  steps:
    - Нажимаем на ссылку «Sign in with Github»
   expected-result: |
    Пользователь должен войти в систему

- summary: |
    Проверка регистрации пользователя через Discord
  requirement: |
    При наличии аккаунта на Discord пользователь должен успешно зарегистрироваться
  prerequisites: |
    Открыта страница регистрации https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    аккаунт на Discord
  steps:
    - Нажимаем на ссылку «Sign in with Discord»
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Вход»
  expected-result: |
    Пользователь должен зарегистрироваться в системе

- summary: |
    Проверка авторизации пользователя через Discord
  requirement: |
    При верном вводе логина и пароля пользователь должен войти в систему
  prerequisites: |
    Открыта страница авторизации https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    аккаунт на Discord
  steps:
    - Нажимаем на ссылку «Sign in with Discord»
  expected-result: |
    Пользователь должен войти в систему

- summary: |
    Проверка выхода из аккаунта пользователя в системе
  requirement: |
    При нажатии на кнопку “Sign out” пользователь должен выйти из системы
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем кнопку «Sign out»
  expected-result: |
    Пользователь должен выйти из системы

- summary: |
    Проверка редактирования имени в профиле пользователя
  requirement: |
    Пользователь имеет возможность редактировать имя профиля и сохранять изменения
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    name = newname
  steps:
    - Открываем меню
    - Нажимаем кнопку «Settings»
    - Редактируем имя в поле «Your name»
    - Нажимаем кнопку «Save»
  expected-result: |
    Имя профиля изменено и эти изменения сохранились и отобразились при обновлении страницы

- summary: |
    Проверка редактирования имени в профиле пользователя на невалидный
  requirement: |
    Пользователь получает сообщение об ошибке
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
   name = no
  steps:
    - Открываем меню
    - Нажимаем кнопку «Settings»
    - Редактируем имя в поле «Your name»
    - Нажимаем кнопку «Save»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Проверка изменения языка программирования в профиле пользователя
  requirement: |
    Пользователь имеет возможность изменять язык программирования в профиле и сохранять изменения
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «Settings»
    - Выбираем язык программирования в поле «Your weapon»
    - Нажимаем кнопку «Save»
  expected-result: |
    Язык программирования изменен и эти изменения сохранились и отобразились при переходе на страницу «My profile»

- summary: |
    Проверка настройки уровня громкости звука игры в профиле пользователя
  requirement: |
    Пользователь имеет возможность настраивать уровень громкости игры в профиле и сохранять изменения
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «Settings»
    - Выбираем уровень громкости в поле «Select sound level»
    - Нажимаем кнопку «Save»
  expected-result: |
    Уровень громкости изменен и эти изменения сохранились

- summary: |
    Проверка настройки типа звука игры в профиле пользователя
  requirement: |
    Пользователь имеет возможность выбрать тип звука игры в профиле и сохранять изменения
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «Settings»
    - Выбираем язык программирования в поле «Select sound type»
    - Нажимаем кнопку «Save»
  expected-result: |
    Тип звука игры изменен и эти изменения сохранились

- summary: |
    Проверка добавления ссылки на аккаунт Discord в профиле
  requirement: |
    Пользователь имеет возможность добавить ссылку на аккаунт Discord в профиле и сохранить изменения
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    аккаунт Discord
  steps:
    - Открываем меню
    - Нажимаем кнопку «Settings»
    - Нажимаем ссылку «Link Discord»
    - Авторизуемся через Discord
  expected-result: |
    В профиле добавлена ссылка на аккаунт Discord

- summary: |
    Проверка отображения статистики игр в профиле
  requirement: |
    Пользователь видит статистику своих игр при переходе в профиль
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «My profile»
    - Выбираем вкладку «Statistics»
  expected-result: |
    В профиле верно отображается статистика игр пользователя

- summary: |
    Проверка отображения завершенных игр в профиле
  requirement: |
    Пользователь видит все завершенные игры при переходе в профиль
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «My profile»
    - Выбираем вкладку «Completed games»
  expected-result: |
    В профиле верно отображаются все завершенные игры пользователя

- summary: |
    Проверка просмотра записи завершенной игры в профиле
  requirement: |
    Пользователь может просматривать запись завершенной игры
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «My profile»
    - Выбираем вкладку «Completed games»
    - В графе «Actions» нажимаем кнопку «Show»
    - Нажимаем кнопку Play
  expected-result: |
    Запись завершенной игры проигрывается

- summary: |
    Проверка ускорения просмотра записи завершенной игры 
  requirement: |
    Пользователь может просматривать запись завершенной игры на скорости 2х
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «My profile»
    - Выбираем вкладку «Completed games»
    - В графе «Actions» нажимаем кнопку «Show»
    - Нажимаем кнопку настройки
    - Выбираем «х2»
    - Нажимаем кнопку Play
  expected-result: |
    Запись завершенной игры проигрывается на скорости х2

- summary: |
    Проверка возможности сохранить ссылку на запись завершенной игры 
  requirement: |
    Пользователь может сохранить ссылку на запись завершенной игры 
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «My profile»
    - Выбираем вкладку «Completed games»
    - В графе «Actions» нажимаем кнопку «Show»
    - Нажимаем кнопку настройки
    - Выбираем сохранение ссылки
   expected-result: |
    Сохраняется ссылка на запись завершенной игры 

- summary: |
    Проверка просмотра профиля соперника 
  requirement: |
    Пользователь может просматривать профиль своего соперника 
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «My profile»
    - Выбираем вкладку «Completed games»
    - В графе «Players» нажимаем на ссылку с ником соперника
expected-result: |
    Происходит переход на профиль соперника

- summary: |
    Проверка отображения рейтинга пользователей
  requirement: |
    Пользователь видит рейтинг пользователей 
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «Users rating»
  expected-result: |
    В профиле верно отображается рейтинг пользователей

- summary: |
    Проверка отображения списка задач
  requirement: |
    Пользователь видит список задач 
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «Tasks»
  expected-result: |
    В профиле верно отображается список задач

- summary: |
    Проверка просмотра задачи из списка
  requirement: |
    Пользователь видит условие задачи 
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «Tasks»
    - В графе «Actions» нажимаем кнопку «Show»
  expected-result: |
    Пользователь переходит к задаче и может видеть ее условие

- summary: |
    Проверка просмотра статуса задачи
  requirement: |
    Пользователь видит статус задачи 
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем кнопку «Tasks»
    - В графе «Actions» нажимаем кнопку «Show»
    - Выбираем вкладку «Status»
  expected-result: |
    Пользователь видит статус задачи

- summary: |
    Создание сборника задач
  requirement: |
    Пользователь может создавать сборник задач
  prerequisites:
    Пользователь авторизован в системе
  test-data: |
    Name = unique task pack 
    Task_ids = 111
  steps:
    - Открываем меню 
    - Нажимаем кнопку «Tasks»
    - Нажимаем кнопку «Create new task pack»
    - Вводим имя пакета в поле «Name»
    - Выбираем Hidden в поле «Visibility»
    - Вводим номер пакета в поле «Task_ids»
    - Нажимаем кнопку «Save»
    - Открываем меню 
    - Нажимаем кнопку «Tasks»
    - Нажимаем кнопку «Task packs»
  expected-result: |
    В списке пакетов отображается пакет задач с введенными пользователем при создании именем, номером и видимостью
    
- summary: |
    Проверка отображения списка турниров
  requirement: |
    Пользователь видит список турниров 
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем кнопку «Tournaments»
  expected-result: |
    В профиле верно отображается список турниров 

- summary: |
    Проверка создания нового турнира
  requirement: |
    Пользователь может создать новый турнир
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    Name = new_tournament111
    Description = It is new_tournament111 tournament for test
    Tags = math
steps:
    - Открываем меню
    - Нажимаем «Tournaments»
    - Переходим к форме «Create a new tournament»
    - Заполняем поле «Name»
    - Выбираем в выпадающем списке «Type» значение «individual» 
    - Заполняем поле «Description» 
    - Заполняем поле «Starts at» актуальной датой турнира
    - Выбираем в выпадающем списке «Access type» значение  «token»
    - Выбираем в выпадающем списке «Task strategy» значение  «game»
    - Выбираем в выпадающем списке «Task provider» значение  «tags»
    - Выбираем в выпадающем списке «Level значение «easy»
    - Заполняем поле «Tags»
    - Выбираем в выпадающем списке «Players limit' значение «2»
    - Выбираем в выпадающем списке «Default language' значение «php»
    - Вводим 180 в поле «Match timeout sec» 
    - Вводим 45 в поле «Break duration sec» 
    - Нажимаем «Create»
  expected-result: |
    Создан новый турнир с введенными пользователем параметрами

- summary: |
    Проверка создания нового турнира с прошедшей датой
  requirement: |
    Пользователь не сможет создать новый турнир с уже прошедшей датой
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    Name = new_tournament111_0
    Description = It is new_tournament111_0 tournament for test again
    Tags = math
steps:
    - Открываем меню
    - Нажимаем «Tournaments»
    - Переходим к форме «Create a new tournament»
    - Заполняем поле «Name»
    - Выбираем в выпадающем списке «Type» значение «individual» 
    - Заполняем поле «Description» 
    - Заполняем поле «Starts at» неактуальной датой турнира
    - Выбираем в выпадающем списке «Access type» значение  «token»
    - Выбираем в выпадающем списке «Task strategy» значение  «game»
    - Выбираем в выпадающем списке «Task provider» значение  «tags»
    - Выбираем в выпадающем списке «Level значение «easy»
    - Заполняем поле «Tags»
    - Выбираем в выпадающем списке «Players limit' значение «2»
    - Выбираем в выпадающем списке «Default language' значение «php»
    - Вводим 180 в поле «Match timeout sec» 
    - Вводим 45 в поле «Break duration sec» 
    - Нажимаем «Create»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Проверка создания нового турнира с уже существующим названием
  requirement: |
    Пользователь не сможет создать новый турнир с уже существующим названием
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    Name = new_tournament111
    Description = It is new_tournament111 tournament for test again and again
    Tags = math
  steps:
    - Открываем меню
    - Нажимаем «Tournaments»
    - Переходим к форме «Create a new tournament»
    - Заполняем поле «Name»
    - Выбираем в выпадающем списке «Type» значение «individual» 
    - Заполняем поле «Description» 
    - Заполняем поле «Starts at» актуальной датой турнира
    - Выбираем в выпадающем списке «Access type» значение  «token»
    - Выбираем в выпадающем списке «Task strategy» значение  «game»
    - Выбираем в выпадающем списке «Task provider» значение  «tags»
    - Выбираем в выпадающем списке «Level значение «elementary»
    - Заполняем поле «Tags»
    - Выбираем в выпадающем списке «Players limit' значение «2»
    - Выбираем в выпадающем списке «Default language' значение «php»
    - Вводим 190 в поле «Match timeout sec» 
    - Вводим 50 в поле «Break duration sec» 
    - Нажимаем «Create»
  expected-result: |
    Пользователь должен получить сообщение об ошибке
    
- summary: |
    Проверка отмены созданного турнира
  requirement: |
    Пользователь может отменить турнир, который создал, до его начала
  prerequisites:
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Открываем меню
    - Нажимаем «Tournaments»
    - Нажимаем кнопку «Show» с созданным турниром
    - Нажимаем кнопку «Cancel»
  expected-result: |
    Турнир отменен. При переходе к списку турниров, удаленный турнир там не отображается.
          
- summary: |
    Проверка возможности создания игры 
  requirement: |
    Пользователь может создать игру с выбранными параметрами
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем «Create a game»
    - Выбираем в поле «Level» сложность игры в одну звезду
    - Выбираем в поле «Game Type» параметр «With a bot»
    - Выбираем в поле «Time control» время «10 min»
    - Выбираем в поле «Choose task by name or tags» параметр «rect_area»
    - Выбираем в поле «Tags» теги «math» и «rest»
    - Нажимаем «Create battle»
  expected-result: |
    Создана игра в соответствии с выбранными параметрами

- summary: |
    Проверка смены языка программирования в процессе игры
  requirement: |
    Пользователь может менять язык программирования в процессе игры
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем «Create a game»
    - Выбираем в поле «Level» сложность игры в одну звезду
    - Выбираем в поле «Game Type» параметр «With a bot»
    - Выбираем в поле «Time control» время «10 min»
    - Выбираем в поле «Choose task by name or tags» параметр «rect_area»
    - Выбираем в поле «Tags» теги «math» и «rest»
    - Нажимаем «Create battle»
    - Нажимаем на выпадающий список с выбором языков программирования
    - Выбираем язык Dart
    - Выбрать язык Golang
 expected-result: |
    В редакторе изменяются языки программирования в соответствии с выбранными из списка

- summary: |
    Проверка возможности сдаться в игре
  requirement: |
    Во время игры пользователь может сдаться
  prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем «Create a game»
    - Выбираем в поле «Level» сложность игры в одну звезду
    - Выбираем в поле «Game Type» параметр «With a bot»
    - Выбираем в поле «Time control» время «10 min»
    - Выбираем в поле «Choose task by name or tags» параметр «rect_area»
    - Выбираем в поле «Tags» теги «math» и «rest»
    - Нажимаем «Create battle»
    - Нажимаем «Give up»
    - В всплывающем окне подтверждаем «Give up»
  expected-result: |
    Игра завершается. Пользователь получает сообщение о завершении игры.

- summary: |
    Проверка возможности перезапустить код 
  requirement: |
    Пользователь может перезапустить код 
 prerequisites: |
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем «Create a game»
    - Выбираем в поле «Level» сложность игры в одну звезду
    - Выбираем в поле «Game Type» параметр «With a bot»
    - Выбираем в поле «Time control» время «10 min»
    - Выбираем в поле «Choose task by name or tags» параметр «rect_area»
    - Выбираем в поле «Tags» теги «math» и «rest»
    - Нажимаем «Create battle»
    - Вводим в поле редактора тестовый код
    - Нажимаем кнопку  «Reset editor»
  expected-result: |
    Код перезапущен, в редакторе отображается шаблонный код

- summary: |
    Проверка отправки сообщений в общем чате на главной странице
  requirement: |
    Пользователь может отправлять сообщения в общий чат на главной странице
  prerequisites:
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Пишем сообщение в текстовое поле чата
    - Нажимаем на кнопку «Send»
  expected-result: |
    В чате отображается отправленное сообщение

- summary: |
    Проверка отправки сообщений в чате игры
  requirement: |
    Пользователь может отправлять сообщения в чат игры
  prerequisites:
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем «Create a game»
    - Выбираем в поле «Level» сложность игры в одну звезду
    - Выбираем в поле «Game Type» параметр «With a bot»
    - Выбираем в поле «Time control» время «10 min»
    - Выбираем в поле «Choose task by name or tags» параметр «rect_area»
    - Выбираем в поле «Tags» теги «math» и «rest»
    - Нажимаем «Create battle»
    - Пишем сообщение в текстовое поле чата
    - Нажимаем на кнопку «Send»
  expected-result: |
    В чате игры отображается отправленное сообщение
   
- summary: |
    Проверка возможности просматривать историю игры во время игры 
  requirement: |
    Пользователь может просматривать историю игры в процессе игры
  prerequisites:
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем «Create a game»
    - Выбираем в поле «Level» сложность игры в одну звезду
    - Выбираем в поле «Game Type» параметр «With a bot»
    - Выбираем в поле «Time control» время «10 min»
    - Выбираем в поле «Choose task by name or tags» параметр «rect_area»
    - Выбираем в поле «Tags» теги «math» и «rest»
    - Нажимаем «Create battle»
    - Пишем сообщение в текстовое поле чата
    - Нажимаем на кнопку «Send»
    - Нажимаем кнопку «Open History»
    - Нажать на кнопку «Play» 
  expected-result: |
    Отображается история игры до момента начала просмотра

- summary: |
    Проверка успешного завершения игры при победе 
  requirement: |
    Если пользователь верно решил задачу и потратил на нее времени меньше, чем соперник, то он должен победить в игре
   prerequisites:
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем «Create a game»
    - Выбираем в поле «Level» сложность игры в одну звезду
    - Выбираем в поле «Game Type» параметр «With a bot»
    - Выбираем в поле «Time control» время «10 min»
    - Выбираем в поле «Choose task by name or tags» параметр «rect_area»
    - Выбираем в поле «Tags» теги «math» и «rest»
    - Нажимаем «Create battle»
    - Выбираем язык программирования NodeJS
    - Вводим в поле редактора тестовый код: 
const _ = require("lodash");
const R = require("rambda");
const solution = (width, length) => {
  return width * length;
};
module.exports = solution;
    - Нажимаем «Check solution»
  expected-result: |
     Игра завершена. Пользователь получает сообщение о победе.

- summary: |
    Проверка проигрыша по истечении времени на игру 
  requirement: |
    Если пользователь не смог решить задачу до истечения времени на игру, он проигрывает
   prerequisites:
    Пользователь авторизован в системе
  test-data: |
    нет
  steps:
    - Нажимаем «Create a game»
    - Выбираем в поле «Level» сложность игры в одну звезду
    - Выбираем в поле «Game Type» параметр «With a bot»
    - Выбираем в поле «Time control» время «2 min»
    - Выбираем в поле «Choose task by name or tags» параметр «rect_area»
    - Выбираем в поле «Tags» теги «math» и «rest»
    - Нажимаем «Create battle»
    - Ждем, когда закончится время игры 
  expected-result: |
     Игра завершена. Пользователь получает сообщение о проигрыше.
